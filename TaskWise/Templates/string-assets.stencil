// swiftlint:disable all
// Generated using SwiftGen — https://github.com/SwiftGen/SwiftGen
// Template created by: Bertalan Dálnoky
{% if files %}

import Foundation
{% set accessModifier %}{% if param.publicAccess %}public{% else %}internal{% endif %}{% endset %}
{% set enumName %}{{param.enumName|default:"Str"}}{% endset %}
{% set defaultLanguage %}{{files.first.document.data.sourceLanguage}}{% endset %}

{%- macro defaultLanguageBlock languages -%}
  {%- for key,value in languages -%}
    {%- if key == defaultLanguage -%}
      {{value.stringUnit.value}}
    {%- endif -%}
  {%- endfor -%}
{%- endmacro -%}

{%- macro isFunctionBlock languages -%}
  {%- for key,value in languages -%}
    {%- if key == defaultLanguage -%}
      {%- set any -%}{{value.stringUnit.value|contains:"%@"}}{%- endset -%}
      {%- set int -%}{{value.stringUnit.value|contains:"%f"}}{%- endset -%}
      {%- set double -%}{{value.stringUnit.value|contains:"%d"}}{%- endset -%}
      {%- set pluralized -%}{{value.stringUnit.value|contains:"%#@"}}{%- endset -%}
      {%- set combined -%}{%- if any == 'true' or int == 'true' or double == 'true' or pluralized == 'true'-%}func{%- else -%}let{%- endif -%}{%- endset -%}
      {{combined}}
    {%- endif -%}
  {%- endfor -%}
{%- endmacro -%}

{%- macro parametersBlock value -%}
  {%- set list -%}
    {{value|replace:'[ \t\r\n\v\fA-Za-z0-9_]*%#@[ \t\r\n\v\fA-Za-z0-9_]*@[ \t\r\n\v\fA-Za-z0-9_]*','#',"regex"|replace:'%f','%f%'|replace:'%d','%d%'|replace:'[ \t\r\n\v\fA-Za-z0-9_]*%@[ \t\r\n\v\fA-Za-z0-9_]*','@',"regex"|replace:'[ \t\r\n\v\fA-Za-z0-9_]*%f%[ \t\r\n\v\fA-Za-z0-9_]*','.',"regex"|replace:'[ \t\r\n\v\fA-Za-z0-9_]*%d%[ \t\r\n\v\fA-Za-z0-9_]*','#',"regex"}}
  {%- endset -%}
  {%- for i in 0...list.count -%}
    {%- set char -%}{{list[i]}}{%- endset -%}
    {%- if char == '@' -%}
      _ p{{forloop.counter}}: String
    {%- elif char == '#' -%}
      _ p{{forloop.counter}}: Int
    {%- elif char == '.' -%}
      _ p{{forloop.counter}}: Double
    {%- endif -%}
    {{ ", " if forloop.counter < list.count }}
  {%- endfor -%}
{%- endmacro -%}

{%- macro argumentsBlock value -%}
  {%- set list -%}
    {{value|replace:'[ \t\r\n\v\fA-Za-z0-9_]*%#@[ \t\r\n\v\fA-Za-z0-9_]*@[ \t\r\n\v\fA-Za-z0-9_]*','#',"regex"|replace:'%f','%f%'|replace:'%d','%d%'|replace:'[ \t\r\n\v\fA-Za-z0-9_]*%@[ \t\r\n\v\fA-Za-z0-9_]*','@',"regex"|replace:'[ \t\r\n\v\fA-Za-z0-9_]*%f%[ \t\r\n\v\fA-Za-z0-9_]*','.',"regex"|replace:'[ \t\r\n\v\fA-Za-z0-9_]*%d%[ \t\r\n\v\fA-Za-z0-9_]*','#',"regex"}}
  {%- endset -%}
  {%- for i in 0...list.count -%}
    {%- set char -%}{{list[i]}}{%- endset -%}
    {%- if char == '@' or char == '#' or char == '.'-%}
      p{{forloop.counter}}
    {%- endif -%}
    {{ ", " if forloop.counter < list.count }}
  {%- endfor -%}
{%- endmacro -%}

{%- macro memberBodyBlock type key value -%}
  {%- set defaultValue -%}{% call defaultLanguageBlock value.localizations %}{%- endset -%}
  {%- if type == 'func' -%}
    {{key||swiftIdentifier:"pretty"|lowerFirstWord|escapeReservedKeywords}}({% call parametersBlock defaultValue %}) -> String {
      {% filter indent:4," ",true %}stringFrom(
        {% filter indent:4," ",true %}format: String(localized: "{{key}}" , defaultValue: "{{defaultValue}}"),
        with: {% call argumentsBlock defaultValue %}{% endfilter %}
      ){% endfilter %}
	}
  {%- else -%}
    {{key||swiftIdentifier:"pretty"|lowerFirstWord|escapeReservedKeywords}} = String(localized: "{{key}}", defaultValue: "{{defaultValue}}")
  {%- endif -%}
{%- endmacro -%}

{{accessModifier}} enum {{enumName}} {
  {% for key,value in files.first.document.data.strings %}
  {% set type %}{% call isFunctionBlock value.localizations %}{% endset %}
  {% set body %}{% call memberBodyBlock type key value %}{% endset %}
    /// {% call defaultLanguageBlock value.localizations %}
    {{accessModifier}} static {{type}} {{body}}
  {% endfor %}
}

extension {{enumName}} {
    private static func stringFrom(format: String, with args: CVarArg...) -> String {
        String(format: format, locale: Locale.current, arguments: args)
    }
}
{% else %}
// No files found
{% endif %}